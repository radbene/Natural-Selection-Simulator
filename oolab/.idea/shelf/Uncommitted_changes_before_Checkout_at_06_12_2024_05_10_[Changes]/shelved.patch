Index: src/main/java/agh/ics/oop/model/GrassField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop.model;\r\n\r\nimport agh.ics.oop.model.util.MapVisualizer;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class GrassField extends AbstractWorldMap{\r\n\r\n    private Map<Vector2d, Animal> animals;\r\n    private Map<Vector2d,Grass> grasses;\r\n    private MapVisualizer visualizer;\r\n\r\n    public Vector2d getLowerleft() {\r\n        return lowerleft;\r\n    }\r\n\r\n    public Vector2d getUpperright() {\r\n        return upperright;\r\n    }\r\n\r\n    private Vector2d lowerleft = new Vector2d(Integer.MIN_VALUE,Integer.MIN_VALUE);\r\n    private Vector2d upperright = new Vector2d(Integer.MAX_VALUE,Integer.MAX_VALUE);\r\n\r\n    private int noOfGrassFields = 0;\r\n\r\n    public GrassField(int n){\r\n        this.noOfGrassFields = n;\r\n        animals = new HashMap<>();\r\n        grasses = new HashMap<>();\r\n        Animal animal = new Animal();\r\n        animal.setBorder(lowerleft,upperright);\r\n        animal = null;\r\n        this.visualizer = new MapVisualizer(this);\r\n        this.GenerateGrassFields();\r\n    }\r\n    private void GenerateGrassFields() {\r\n        int n = this.noOfGrassFields;\r\n        double upperlimit = Math.sqrt(n * 10);\r\n        int i = 0;\r\n        RandomPositionGenerator randomPositionGenerator = new RandomPositionGenerator((int)upperlimit, (int)upperlimit, n);\r\n        Iterator<Vector2d> positionsIterator = randomPositionGenerator.iterator();\r\n\r\n        while(positionsIterator.hasNext()) {\r\n            Vector2d new_grass_position = positionsIterator.next();\r\n            grasses.put(new_grass_position, new Grass(new_grass_position));\r\n        }\r\n    }\r\n        /*while (i < noOfGrassFields) {\r\n            int x = (int) (Math.random() * upperlimit);\r\n            int y = (int) (Math.random() * upperlimit);\r\n            boolean flag = false;\r\n            for (Vector2d position : grasses.keySet()) {\r\n                if (Objects.equals(position, new Vector2d(x, y))) {\r\n                    flag = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!flag) {\r\n                grasses.put(new Vector2d(x, y), new Grass(new Vector2d(x, y)));\r\n                i++;\r\n            }\r\n        }\r\n        System.out.println(grasses.size());\r\n    }\r\n    */\r\n\r\n    private void minMax(Map<Vector2d,Animal> animals,Map<Vector2d, Grass> grasses){\r\n        int xmin = Integer.MAX_VALUE;\r\n        int xmax = Integer.MIN_VALUE;\r\n        int ymin = Integer.MAX_VALUE;\r\n        int ymax = Integer.MIN_VALUE;\r\n        for(Vector2d v : animals.keySet()){\r\n            if(v.getX() < xmin) xmin = v.getX();\r\n            if(v.getX() > xmax) xmax = v.getX();\r\n            if(v.getY() < ymin) ymin = v.getY();\r\n            if(v.getY() > ymax) ymax = v.getY();\r\n        }\r\n\r\n        for(Vector2d v : grasses.keySet()){\r\n            if(v.getX() < xmin) xmin = v.getX();\r\n            if(v.getX() > xmax) xmax = v.getX();\r\n            if(v.getY() < ymin) ymin = v.getY();\r\n            if(v.getY() > ymax) ymax = v.getY();\r\n        }\r\n        this.lowerleft = new Vector2d(xmin,ymin);\r\n        this.upperright = new Vector2d(xmax,ymax);\r\n    }\r\n\r\n    public boolean canMoveTo(Vector2d position) {\r\n        return position.follows(lowerleft)  && !(objectAt(position) instanceof Animal);\r\n    }\r\n\r\n    public WorldElement objectAt(Vector2d position) {\r\n        WorldElement object = super.objectAt(position);\r\n        if(object != null) return object;\r\n        return grasses.get(position);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        minMax(animals,grasses);\r\n        System.out.println(lowerleft);\r\n        System.out.println(upperright);\r\n        return visualizer.draw(lowerleft, upperright);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(noOfGrassFields, lowerleft, upperright, visualizer, animals, grasses);\r\n    }\r\n\r\n    /*public boolean place(Animal animal){\r\n        if (canMoveTo(animal.getPosition())) {\r\n            animals.put(animal.getPosition(), animal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void move(Animal animal, MoveDirection direction) {\r\n        Vector2d oldPosition = animal.getPosition();\r\n        MoveDirection oppositeDirection = direction.opposite();\r\n        animal.move(direction);\r\n        if(place(animal)){\r\n            animals.remove(oldPosition);\r\n        }\r\n        else{\r\n            if(!oldPosition.equals(animal.getPosition())) {\r\n                animal.move(oppositeDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public boolean isOccupied(Vector2d position){\r\n        return objectAt(position) != null;\r\n    }\r\n\r\n    public WorldElement objectAt(Vector2d position) {\r\n        if (animals.get(position) != null) return animals.get(position);\r\n        if (grasses.get(position) != null) return grasses.get(position);\r\n        return null;\r\n    }\r\n\r\n\r\n    */\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/GrassField.java b/src/main/java/agh/ics/oop/model/GrassField.java
--- a/src/main/java/agh/ics/oop/model/GrassField.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/model/GrassField.java	(date 1733458095986)
@@ -2,10 +2,7 @@
 
 import agh.ics.oop.model.util.MapVisualizer;
 
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Objects;
+import java.util.*;
 
 
 public class GrassField extends AbstractWorldMap{
@@ -14,6 +11,7 @@
     private Map<Vector2d,Grass> grasses;
     private MapVisualizer visualizer;
 
+
     public Vector2d getLowerleft() {
         return lowerleft;
     }
@@ -34,6 +32,7 @@
         Animal animal = new Animal();
         animal.setBorder(lowerleft,upperright);
         animal = null;
+        this.addObserver(new ConsoleMapDisplay());
         this.visualizer = new MapVisualizer(this);
         this.GenerateGrassFields();
     }
Index: src/main/java/agh/ics/oop/World.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop;\r\n\r\nimport agh.ics.oop.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class World {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        System.out.println(\"system wystartował\");\r\n        //run(args)\r\n        run(OptionsParser.parse(args));\r\n\r\n        Vector2d position1 = new Vector2d(1,2);\r\n        System.out.println(position1);\r\n        Vector2d position2 = new Vector2d(-2,1);\r\n        System.out.println(position2);\r\n        System.out.println(position1.add(position2));\r\n\r\n        Animal spuchacz = new Animal();\r\n        spuchacz.toString();\r\n        List<MoveDirection> directions = OptionsParser.parse(args);\r\n        List<Vector2d> positions = List.of(new Vector2d(2,2), new Vector2d(3,4));\r\n        //WorldMap map = new RectangularMap(10,10);\r\n        WorldMap map = new GrassField(10);\r\n        Simulation simulation = new Simulation(positions, directions,map);\r\n        simulation.run();\r\n        //GrassField field = new GrassField(10);\r\n        //field.toString();\r\n        System.out.println(\"system zakończył działanie\");\r\n    }\r\n\r\n    //static public void run(String[] args)\r\n    //public static void run(MoveDirections[] moves)\r\n    public static void run(List<MoveDirection> moves)\r\n    {\r\n        //System.out.println(\"zwierzak idzie do przodu\");\r\n        /*for (int i = 0; i < args.length; i++) {\r\n            System.out.print(args[i]);\r\n            if (i < args.length - 1) {\r\n                System.out.print(\", \");\r\n            }\r\n        }\r\n        System.out.println(\"\");\r\n        */\r\n        System.out.println(\"Start\");\r\n        //for (int i = 0; i < moves.length; i++) {\r\n            //switch (moves[i]) {\r\n        for (int i = 0; i < moves.size(); i++) {\r\n            switch (moves.get(i)) {\r\n                /*case \"f\" -> System.out.println(\"zwierzak idzie do przodu\");\r\n                case \"b\" -> System.out.println(\"zwierzak idzie do tyłu\");\r\n                case \"r\" -> System.out.println(\"zwierzak skręca w prawo\");\r\n                case \"l\" -> System.out.println(\"zwierzak skręca w lewo\");\r\n                 */\r\n                case MoveDirection.FORWARD -> System.out.println(\"zwierzak idzie do przodu\");\r\n                case MoveDirection.BACKWARD -> System.out.println(\"zwierzak idzie do tyłu\");\r\n                case MoveDirection.RIGHT -> System.out.println(\"zwierzak skręca w prawo\");\r\n                case MoveDirection.LEFT -> System.out.println(\"zwierzak skręca w lewo\");\r\n            }\r\n        }\r\n        System.out.println(\"Stop\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/World.java b/src/main/java/agh/ics/oop/World.java
--- a/src/main/java/agh/ics/oop/World.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/World.java	(date 1733458169211)
@@ -2,6 +2,8 @@
 
 import agh.ics.oop.model.*;
 
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 public class World {
@@ -20,13 +22,32 @@
 
         Animal spuchacz = new Animal();
         spuchacz.toString();
-        List<MoveDirection> directions = OptionsParser.parse(args);
-        List<Vector2d> positions = List.of(new Vector2d(2,2), new Vector2d(3,4));
-        //WorldMap map = new RectangularMap(10,10);
-        WorldMap map = new GrassField(10);
-        Simulation simulation = new Simulation(positions, directions,map);
-        simulation.run();
+        try {
+            List<MoveDirection> directions = OptionsParser.parse(args);
+            List<Vector2d> positions = List.of(new Vector2d(2,2), new Vector2d(3,4));
+            List<Simulation> simulations = new ArrayList<>();
+            for (int i = 0; i < 1000; i++){
+                AbstractWorldMap map1 = new RectangularMap(5,5);
+                AbstractWorldMap map2 = new GrassField(30);
+                simulations.add(new Simulation(positions,directions,map1));
+                simulations.add(new Simulation(positions,directions,map2));
+            }
+            //map.addObserver(new ConsoleMapDisplay());
+            //Simulation simulation = new Simulation(positions, directions,map);
+            SimulationEngine engine = new SimulationEngine(simulations);
+            engine.runAsync();
+            //engine.runAsyncInThreadPool();
+            //simulation.run();
+
+            engine.awaitSimulationsEnd();
+
+        } catch (IllegalArgumentException e) {
+            System.out.println("Error: " + e.getMessage());
+            return;
+        }
+
         //GrassField field = new GrassField(10);
+        //field.addObserver(new ConsoleMapDisplay());
         //field.toString();
         System.out.println("system zakończył działanie");
     }
Index: src/main/java/agh/ics/oop/model/AbstractWorldMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop.model;\r\nimport agh.ics.oop.model.util.MapVisualizer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\npublic abstract class AbstractWorldMap implements WorldMap {\r\n\r\n    protected final Map<Vector2d, Animal> animals = new HashMap<>();\r\n    protected final MapVisualizer visualizer = new MapVisualizer(this);\r\n\r\n\r\n    @Override\r\n    public boolean place(Animal animal) {\r\n        if (canMoveTo(animal.getPosition())) {\r\n            animals.put(animal.getPosition(), animal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void move(Animal animal, MoveDirection direction) {\r\n        Vector2d oldPosition = animal.getPosition();\r\n        MoveDirection oppositeDirection = direction.opposite();\r\n        animal.move(direction);\r\n        if(place(animal)){\r\n            animals.remove(oldPosition);\r\n        }\r\n        else{\r\n            if(!oldPosition.equals(animal.getPosition())) {\r\n                animal.move(oppositeDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean isOccupied(Vector2d position) {\r\n        return objectAt(position) != null;\r\n    }\r\n\r\n\r\n    @Override\r\n    public WorldElement objectAt(Vector2d position) {\r\n        if(animals.get(position) != null) return animals.get(position);\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    public List<WorldElement> getElements() {\r\n        List<WorldElement> elements = new ArrayList<>(animals.values());\r\n        return elements;\r\n    }\r\n\r\n    @Override\r\n    abstract public boolean canMoveTo(Vector2d position);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/AbstractWorldMap.java b/src/main/java/agh/ics/oop/model/AbstractWorldMap.java
--- a/src/main/java/agh/ics/oop/model/AbstractWorldMap.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/model/AbstractWorldMap.java	(date 1733458152162)
@@ -1,39 +1,54 @@
 package agh.ics.oop.model;
+import agh.ics.oop.model.util.Boundary;
+import agh.ics.oop.model.util.IncorrectPositionException;
 import agh.ics.oop.model.util.MapVisualizer;
 
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
+
 public abstract class AbstractWorldMap implements WorldMap {
 
     protected final Map<Vector2d, Animal> animals = new HashMap<>();
     protected final MapVisualizer visualizer = new MapVisualizer(this);
+    protected Vector2d lowerLeft = new Vector2d(Integer.MIN_VALUE, Integer.MIN_VALUE);
+    protected Vector2d upperRight = new Vector2d(Integer.MAX_VALUE, Integer.MAX_VALUE);
+    protected final List<MapChangeListener> observers = new ArrayList<>();
+    private final UUID id = UUID.randomUUID();;
+
+
+
+    public void addObserver(MapChangeListener observer) {
+        observers.add(observer);
+    }
 
+    public void removeObserver(MapChangeListener observer) {
+        observers.remove(observer);
+    }
+
+    protected void notifyObservers(String message) {
+        for (MapChangeListener observer : observers) {
+            observer.mapChanged(this, message);
+        }
+    }
 
     @Override
-    public boolean place(Animal animal) {
+    public boolean place(Animal animal) throws IncorrectPositionException {
         if (canMoveTo(animal.getPosition())) {
             animals.put(animal.getPosition(), animal);
+            notifyObservers("Animal placed at " + animal.getPosition());
             return true;
+        }else {
+            throw new IncorrectPositionException(animal.getPosition());
         }
-        return false;
     }
 
 
     @Override
     public void move(Animal animal, MoveDirection direction) {
         Vector2d oldPosition = animal.getPosition();
-        MoveDirection oppositeDirection = direction.opposite();
         animal.move(direction);
-        if(place(animal)){
-            animals.remove(oldPosition);
-        }
-        else{
-            if(!oldPosition.equals(animal.getPosition())) {
-                animal.move(oppositeDirection);
-            }
-        }
+        animals.remove(oldPosition);
+        animals.put(animal.getPosition(), animal);
+        notifyObservers("Animal moved from " + oldPosition + " to " + animal.getPosition());
     }
 
 
@@ -58,4 +73,18 @@
 
     @Override
     abstract public boolean canMoveTo(Vector2d position);
+
+
+    abstract public Boundary getCurrentBounds();
+
+    @Override
+    public UUID getId(){
+        return id;
+    }
+
+    @Override
+    public String toString() {
+        System.out.println(getCurrentBounds().lowerLeft());
+        return visualizer.draw(getCurrentBounds().lowerLeft(), getCurrentBounds().upperRight());
+    }
 }
Index: src/main/java/agh/ics/oop/model/WorldMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop.model;\r\nimport agh.ics.oop.model.MoveDirection;\r\nimport agh.ics.oop.model.Vector2d;\r\n\r\n/**\r\n * The interface responsible for interacting with the map of the world.\r\n * Assumes that Vector2d and MoveDirection classes are defined.\r\n *\r\n * @author apohllo, idzik\r\n */\r\npublic interface WorldMap extends MoveValidator {\r\n\r\n    /**\r\n     * Place a animal on the map.\r\n     *\r\n     * @param animal The animal to place on the map.\r\n     * @return True if the animal was placed. The animal cannot be placed if the move is not valid.\r\n     */\r\n    boolean place(Animal animal);\r\n\r\n    /**\r\n     * Moves an animal (if it is present on the map) according to specified direction.\r\n     * If the move is not possible, this method has no effect.\r\n     */\r\n    void move(Animal animal, MoveDirection direction);\r\n\r\n    /**\r\n     * Return true if given position on the map is occupied. Should not be\r\n     * confused with canMove since there might be empty positions where the animal\r\n     * cannot move.\r\n     *\r\n     * @param position Position to check.\r\n     * @return True if the position is occupied.\r\n     */\r\n    boolean isOccupied(Vector2d position);\r\n\r\n    /**\r\n     * Return an animal at a given position.\r\n     *\r\n     * @param position The position of the animal.\r\n     * @return animal or null if the position is not occupied.\r\n     */\r\n    WorldElement objectAt(Vector2d position);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/WorldMap.java b/src/main/java/agh/ics/oop/model/WorldMap.java
--- a/src/main/java/agh/ics/oop/model/WorldMap.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/model/WorldMap.java	(date 1733458172477)
@@ -1,6 +1,10 @@
 package agh.ics.oop.model;
 import agh.ics.oop.model.MoveDirection;
 import agh.ics.oop.model.Vector2d;
+import agh.ics.oop.model.util.Boundary;
+import agh.ics.oop.model.util.IncorrectPositionException;
+
+import java.util.UUID;
 
 /**
  * The interface responsible for interacting with the map of the world.
@@ -16,7 +20,7 @@
      * @param animal The animal to place on the map.
      * @return True if the animal was placed. The animal cannot be placed if the move is not valid.
      */
-    boolean place(Animal animal);
+    boolean place(Animal animal) throws IncorrectPositionException;
 
     /**
      * Moves an animal (if it is present on the map) according to specified direction.
@@ -41,4 +45,7 @@
      * @return animal or null if the position is not occupied.
      */
     WorldElement objectAt(Vector2d position);
+
+    UUID getId();
+
 }
\ No newline at end of file
Index: src/main/java/agh/ics/oop/model/RectangularMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop.model;\r\n\r\nimport agh.ics.oop.model.util.MapVisualizer;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RectangularMap extends AbstractWorldMap{\r\n    private Map<Vector2d, Animal> animals;\r\n\r\n\r\n    private  Vector2d lowerLeft;\r\n    private  Vector2d upperRight;\r\n    private  MapVisualizer visualizer;\r\n\r\n\r\n    public RectangularMap(int width, int height){\r\n        this.lowerLeft = new Vector2d(0,0);\r\n        this.upperRight = new Vector2d(width -1, height -1);\r\n        this.animals = new HashMap<>();\r\n        Animal animal = new Animal();\r\n        animal.setBorder(this.lowerLeft,this.upperRight);\r\n        animal = null;\r\n        this.visualizer = new MapVisualizer(this);\r\n    }\r\n\r\n    public boolean place(Animal animal){\r\n        if (canMoveTo(animal.getPosition())) {\r\n            animals.put(animal.getPosition(), animal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public boolean canMoveTo(Vector2d position) {\r\n        return !isOccupied(position) && position.follows(lowerLeft)  && position.precedes(upperRight);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return this.visualizer.draw(lowerLeft, upperRight);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/RectangularMap.java b/src/main/java/agh/ics/oop/model/RectangularMap.java
--- a/src/main/java/agh/ics/oop/model/RectangularMap.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/model/RectangularMap.java	(date 1733458096014)
@@ -21,6 +21,7 @@
         Animal animal = new Animal();
         animal.setBorder(this.lowerLeft,this.upperRight);
         animal = null;
+        this.addObserver(new ConsoleMapDisplay());
         this.visualizer = new MapVisualizer(this);
     }
 
Index: src/main/java/agh/ics/oop/Simulation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package agh.ics.oop;\r\n\r\nimport agh.ics.oop.model.Animal;\r\nimport agh.ics.oop.model.MoveDirection;\r\nimport agh.ics.oop.model.Vector2d;\r\nimport agh.ics.oop.model.WorldMap;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Simulation {\r\n    private List<Vector2d> starting_positions;\r\n    private List<MoveDirection> moves;\r\n    private WorldMap map;\r\n\r\n    public List<Animal> getAnimals() {\r\n        return animals;\r\n    }\r\n\r\n    private List<Animal> animals = new ArrayList<>();\r\n\r\n\r\n\r\n    public Simulation(List<Vector2d> starting_positions, List<MoveDirection> moves, WorldMap world) {\r\n        /*if (starting_positions.size() == 0 || moves.size() == 0) {\r\n            throw new IllegalArgumentException(\"starting_positions and moves must not be empty\");\r\n        }*/\r\n        this.map = world;\r\n        this.starting_positions = starting_positions;\r\n        this.moves = moves;\r\n        int i = 0;\r\n        System.out.println(\"Starting positions: \" + starting_positions);\r\n        for (Vector2d position : starting_positions) {\r\n            Animal new_animal = new Animal(position);\r\n            new_animal.setIndex(i);\r\n            if (map.place(new_animal)){\r\n                System.out.println(new_animal.getPosition());\r\n                this.animals.add(new_animal);\r\n                System.out.println(\"Animal placed: \" + new_animal.getPosition());\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    public void run() {\r\n        System.out.println(map);\r\n        System.out.println(animals.size());\r\n        if (this.animals.isEmpty()){\r\n            return;\r\n        }\r\n        int a = 0;\r\n        int m = 0;\r\n        while (m < this.moves.size()){\r\n            map.move(this.animals.get(a % this.animals.size()), this.moves.get(m));\r\n            System.out.println(map);\r\n            a++;\r\n            m++;\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/Simulation.java b/src/main/java/agh/ics/oop/Simulation.java
--- a/src/main/java/agh/ics/oop/Simulation.java	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/src/main/java/agh/ics/oop/Simulation.java	(date 1733458095891)
@@ -8,7 +8,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class Simulation {
+public class Simulation implements Runnable {
     private List<Vector2d> starting_positions;
     private List<MoveDirection> moves;
     private WorldMap map;
@@ -43,19 +43,16 @@
     }
 
     public void run() {
-        System.out.println(map);
-        System.out.println(animals.size());
         if (this.animals.isEmpty()){
             return;
         }
         int a = 0;
         int m = 0;
-        while (m < this.moves.size()){
+        while (m < this.moves.size()) {
             map.move(this.animals.get(a % this.animals.size()), this.moves.get(m));
-            System.out.println(map);
             a++;
             m++;
-        }
-    }
+            }
+        }
 
 }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ /dev/null	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
@@ -1,19 +0,0 @@
-Index: src/main/java/agh/ics/oop/model/AbstractWorldMap.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package agh.ics.oop.model;\r\nimport agh.ics.oop.model.util.MapVisualizer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\npublic abstract class AbstractWorldMap implements WorldMap {\r\n\r\n    protected final Map<Vector2d, Animal> animals = new HashMap<>();\r\n    protected final MapVisualizer visualizer = new MapVisualizer(this);\r\n\r\n\r\n    @Override\r\n    public boolean place(Animal animal) {\r\n        if (canMoveTo(animal.getPosition())) {\r\n            animals.put(animal.getPosition(), animal);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void move(Animal animal, MoveDirection direction) {\r\n        Vector2d oldPosition = animal.getPosition();\r\n        MoveDirection oppositeDirection = direction.opposite();\r\n        animal.move(direction);\r\n        if(place(animal)){\r\n            animals.remove(oldPosition);\r\n        }\r\n        else{\r\n            if(!oldPosition.equals(animal.getPosition())) {\r\n                animal.move(oppositeDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean isOccupied(Vector2d position) {\r\n        return objectAt(position) != null;\r\n    }\r\n\r\n\r\n    @Override\r\n    public WorldElement objectAt(Vector2d position) {\r\n        if(animals.get(position) != null) return animals.get(position);\r\n        return null;\r\n    }\r\n\r\n    \r\n    public List<WorldElement> getElements() {\r\n        List<WorldElement> elements = new ArrayList<>(animals.values());\r\n        return elements;\r\n    }\r\n\r\n    @Override\r\n    abstract public boolean canMoveTo(Vector2d position);\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/main/java/agh/ics/oop/model/AbstractWorldMap.java b/src/main/java/agh/ics/oop/model/AbstractWorldMap.java
---- a/src/main/java/agh/ics/oop/model/AbstractWorldMap.java	(revision 996c9dd8a23b734ea7620370f9eb61c04ab98ca7)
-+++ b/src/main/java/agh/ics/oop/model/AbstractWorldMap.java	(date 1732247370310)
-@@ -49,7 +49,7 @@
-         return null;
-     }
- 
--    
-+
-     public List<WorldElement> getElements() {
-         List<WorldElement> elements = new ArrayList<>(animals.values());
-         return elements;
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49__Changes_.xml	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ /dev/null	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]" date="1732247382947" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 22.11.2024 04:49 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f3a1e536-14ad-4814-afef-55c312a4bf1b\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/agh/ics/oop/model/RectangularMap.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/agh/ics/oop/model/RectangularMap.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"oolab\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"lab5\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;radbene&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/radbene/PO_2024_PT1130_BENEDYKCINSKI.git&quot;,\r\n    &quot;accountId&quot;: &quot;3afa1b51-5252-4c8e-8c8e-d516b5c80022&quot;\r\n  }\r\n}</component>\r\n  <component name=\"KubernetesApiPersistence\">{}</component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2niPyQJcZn7Uq7YpR8xQxcuNpVs\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.World.executor\": \"Run\",\r\n    \"Gradle.AnimalTest.InvalidAnimalStartingPosition.executor\": \"Run\",\r\n    \"Gradle.Build oolab.executor\": \"Run\",\r\n    \"Gradle.GrassFieldTest.executor\": \"Run\",\r\n    \"Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass.executor\": \"Run\",\r\n    \"Gradle.GrassFieldTest.testMapBoundaries.executor\": \"Run\",\r\n    \"Gradle.GrassFieldTest.testMoveAnimal.executor\": \"Debug\",\r\n    \"Gradle.GrassFieldTest.testMoveIntoOccupiedPosition.executor\": \"Run\",\r\n    \"Gradle.MapDirectionTest.NextTest.executor\": \"Run\",\r\n    \"Gradle.MapDirectionTest.PreviousTest.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.InvalidCharacters.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.NoCharacters.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.RandomCharacters.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.SomeValidSomeInvalidCharacters.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.ValidCharacters.executor\": \"Run\",\r\n    \"Gradle.OptionsParserTest.executor\": \"Run\",\r\n    \"Gradle.RectangularMapTests.executor\": \"Run\",\r\n    \"Gradle.RectangularMapTests.testToString.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.EmptyMovesTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.EmptyStartingPositionsTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.EmptyStarting_positionsAndMoves.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.GoingOutOfBoundsTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.RotatingLeftTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.RotatingRightTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.SameStartingPosition.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.StartingPositionsOutOfBoundsTest.executor\": \"Run\",\r\n    \"Gradle.SimulationTest.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.AddingVectors.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.DifferentVectorsEquals.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.FollowingVectors.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.LowerLeftTest.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.PrecedingVectors.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.SameVectorsEquals.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.StringFormat.executor\": \"Run\",\r\n    \"Gradle.Vector2dTest.UpperRightTest.executor\": \"Run\",\r\n    \"Gradle.oolab [:agh.ics.oop.World.main()].executor\": \"Run\",\r\n    \"JUnit.agh.ics.oop in oolab.main.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"create.test.in.the.same.root\": \"true\",\r\n    \"git-widget-placeholder\": \"#9 on lab5-dodatkowe\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Radek/GitHub/PO_2024_PT1130_BENEDYKCINSKI/oolab\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/Radek/IdeaProjects/oolab/src/main/java/org/example/Main.java\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"configurable.group.editor\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"agh.ics.oop.model\" />\r\n      <recent name=\"agh.ics.oop\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Gradle.GrassFieldTest\">\r\n    <configuration name=\"World\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"agh.ics.oop.World\" />\r\n      <module name=\"oolab.main\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\"f f f f f f f f\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"agh.ics.oop.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GrassFieldTest\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;agh.ics.oop.model.GrassFieldTest&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"GrassFieldTest.testCannotMoveToOccupiedPositionByGrass\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;agh.ics.oop.model.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"RectangularMapTests\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;agh.ics.oop.model.RectangularMapTests&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"RectangularMapTests.testToString\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;agh.ics.oop.model.RectangularMapTests.testToString&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.World\" />\r\n      <item itemvalue=\"Gradle.GrassFieldTest\" />\r\n      <item itemvalue=\"Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass\" />\r\n      <item itemvalue=\"Gradle.RectangularMapTests\" />\r\n      <item itemvalue=\"Gradle.RectangularMapTests.testToString\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.GrassFieldTest\" />\r\n        <item itemvalue=\"Application.World\" />\r\n        <item itemvalue=\"Gradle.RectangularMapTests.testToString\" />\r\n        <item itemvalue=\"Gradle.RectangularMapTests\" />\r\n        <item itemvalue=\"Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f3a1e536-14ad-4814-afef-55c312a4bf1b\" name=\"Changes\" comment=\"\" />\r\n      <created>1729453177481</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729453177481</updated>\r\n      <workItem from=\"1729453178674\" duration=\"4264000\" />\r\n      <workItem from=\"1729774497192\" duration=\"3079000\" />\r\n      <workItem from=\"1729778713874\" duration=\"1549000\" />\r\n      <workItem from=\"1729782078707\" duration=\"1668000\" />\r\n      <workItem from=\"1729851406407\" duration=\"2481000\" />\r\n      <workItem from=\"1730230500846\" duration=\"8979000\" />\r\n      <workItem from=\"1730371657166\" duration=\"5824000\" />\r\n      <workItem from=\"1730455501139\" duration=\"1401000\" />\r\n      <workItem from=\"1730746082124\" duration=\"1088000\" />\r\n      <workItem from=\"1730887424349\" duration=\"350000\" />\r\n      <workItem from=\"1730887785442\" duration=\"164000\" />\r\n      <workItem from=\"1730887958901\" duration=\"280000\" />\r\n      <workItem from=\"1730888249549\" duration=\"5813000\" />\r\n      <workItem from=\"1730997778883\" duration=\"2159000\" />\r\n      <workItem from=\"1731052327346\" duration=\"8255000\" />\r\n      <workItem from=\"1731445562309\" duration=\"3668000\" />\r\n      <workItem from=\"1731499861265\" duration=\"10016000\" />\r\n      <workItem from=\"1731633463275\" duration=\"3784000\" />\r\n      <workItem from=\"1731666558717\" duration=\"2285000\" />\r\n      <workItem from=\"1731715446408\" duration=\"1873000\" />\r\n      <workItem from=\"1732143122803\" duration=\"15580000\" />\r\n      <workItem from=\"1732270049779\" duration=\"1839000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/Main.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 24e6e6582566afa8adbf4452e3e071f92d651eac)
+++ b/.idea/workspace.xml	(date 1733458165599)
@@ -5,8 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="f3a1e536-14ad-4814-afef-55c312a4bf1b" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/SimulationEngine.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_22_11_2024_04_49__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/Simulation.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/Simulation.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/World.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/World.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/AbstractWorldMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/AbstractWorldMap.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/GrassField.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/GrassField.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/RectangularMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/RectangularMap.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/WorldMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/agh/ics/oop/model/WorldMap.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -51,7 +60,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$/.." value="lab5" />
+        <entry key="$PROJECT_DIR$/.." value="lab4-dodatkowe" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
@@ -80,66 +89,64 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.World.executor": "Run",
-    "Gradle.AnimalTest.InvalidAnimalStartingPosition.executor": "Run",
-    "Gradle.Build oolab.executor": "Run",
-    "Gradle.GrassFieldTest.executor": "Run",
-    "Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass.executor": "Run",
-    "Gradle.GrassFieldTest.testMapBoundaries.executor": "Run",
-    "Gradle.GrassFieldTest.testMoveAnimal.executor": "Debug",
-    "Gradle.GrassFieldTest.testMoveIntoOccupiedPosition.executor": "Run",
-    "Gradle.MapDirectionTest.NextTest.executor": "Run",
-    "Gradle.MapDirectionTest.PreviousTest.executor": "Run",
-    "Gradle.OptionsParserTest.InvalidCharacters.executor": "Run",
-    "Gradle.OptionsParserTest.NoCharacters.executor": "Run",
-    "Gradle.OptionsParserTest.RandomCharacters.executor": "Run",
-    "Gradle.OptionsParserTest.SomeValidSomeInvalidCharacters.executor": "Run",
-    "Gradle.OptionsParserTest.ValidCharacters.executor": "Run",
-    "Gradle.OptionsParserTest.executor": "Run",
-    "Gradle.RectangularMapTests.executor": "Run",
-    "Gradle.RectangularMapTests.testToString.executor": "Run",
-    "Gradle.SimulationTest.EmptyMovesTest.executor": "Run",
-    "Gradle.SimulationTest.EmptyStartingPositionsTest.executor": "Run",
-    "Gradle.SimulationTest.EmptyStarting_positionsAndMoves.executor": "Run",
-    "Gradle.SimulationTest.GoingOutOfBoundsTest.executor": "Run",
-    "Gradle.SimulationTest.RotatingLeftTest.executor": "Run",
-    "Gradle.SimulationTest.RotatingRightTest.executor": "Run",
-    "Gradle.SimulationTest.SameStartingPosition.executor": "Run",
-    "Gradle.SimulationTest.StartingPositionsOutOfBoundsTest.executor": "Run",
-    "Gradle.SimulationTest.executor": "Run",
-    "Gradle.Vector2dTest.AddingVectors.executor": "Run",
-    "Gradle.Vector2dTest.DifferentVectorsEquals.executor": "Run",
-    "Gradle.Vector2dTest.FollowingVectors.executor": "Run",
-    "Gradle.Vector2dTest.LowerLeftTest.executor": "Run",
-    "Gradle.Vector2dTest.PrecedingVectors.executor": "Run",
-    "Gradle.Vector2dTest.SameVectorsEquals.executor": "Run",
-    "Gradle.Vector2dTest.StringFormat.executor": "Run",
-    "Gradle.Vector2dTest.UpperRightTest.executor": "Run",
-    "Gradle.oolab [:agh.ics.oop.World.main()].executor": "Run",
-    "JUnit.agh.ics.oop in oolab.main.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
-    "create.test.in.the.same.root": "true",
-    "git-widget-placeholder": "#9 on lab5-dodatkowe",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/Radek/GitHub/PO_2024_PT1130_BENEDYKCINSKI/oolab",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "onboarding.tips.debug.path": "C:/Users/Radek/IdeaProjects/oolab/src/main/java/org/example/Main.java",
-    "project.structure.last.edited": "Project",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "configurable.group.editor",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.World.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.AnimalTest.InvalidAnimalStartingPosition.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Build oolab.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.MapDirectionTest.NextTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.MapDirectionTest.PreviousTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.InvalidCharacters.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.NoCharacters.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.RandomCharacters.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.SomeValidSomeInvalidCharacters.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.ValidCharacters.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.OptionsParserTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.RectangularMapTests.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.RectangularMapTests.testCannotMoveToOccupiedPosition.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.RectangularMapTests.testPlaceAnimalOnOccupiedPosition.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.RectangularMapTests.testPlaceAnimalOutOfBounds.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.RectangularMapTests.testToString.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.EmptyMovesTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.EmptyStartingPositionsTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.EmptyStarting_positionsAndMoves.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.GoingOutOfBoundsTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.RotatingLeftTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.RotatingRightTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.SameStartingPosition.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.StartingPositionsOutOfBoundsTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.SimulationTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.AddingVectors.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.DifferentVectorsEquals.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.FollowingVectors.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.LowerLeftTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.PrecedingVectors.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.SameVectorsEquals.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.StringFormat.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.Vector2dTest.UpperRightTest.executor&quot;: &quot;Run&quot;,
+    &quot;Gradle.oolab [:agh.ics.oop.World.main()].executor&quot;: &quot;Run&quot;,
+    &quot;JUnit.agh.ics.oop in oolab.main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
+    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Radek/GitHub/PO_2024_PT1130_BENEDYKCINSKI/oolab&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Radek/IdeaProjects/oolab/src/main/java/org/example/Main.java&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.editor&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CreateTestDialog.Recents.Supers">
       <recent name="" />
@@ -149,11 +156,11 @@
       <recent name="agh.ics.oop" />
     </key>
   </component>
-  <component name="RunManager" selected="Gradle.GrassFieldTest">
+  <component name="RunManager" selected="Application.World">
     <configuration name="World" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="agh.ics.oop.World" />
       <module name="oolab.main" />
-      <option name="PROGRAM_PARAMETERS" value="f f f f f f f f" />
+      <option name="PROGRAM_PARAMETERS" value="l b f b f b f b f b f b f b r r f f f f f f f f" />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="agh.ics.oop.*" />
@@ -164,7 +171,7 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="GrassFieldTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="RectangularMapTests" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -177,7 +184,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;agh.ics.oop.model.GrassFieldTest&quot;" />
+            <option value="&quot;agh.ics.oop.model.RectangularMapTests&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -188,7 +195,7 @@
       <RunAsTest>true</RunAsTest>
       <method v="2" />
     </configuration>
-    <configuration name="GrassFieldTest.testCannotMoveToOccupiedPositionByGrass" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="RectangularMapTests.testCannotMoveToOccupiedPosition" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -201,7 +208,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;agh.ics.oop.model.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass&quot;" />
+            <option value="&quot;agh.ics.oop.model.RectangularMapTests.testCannotMoveToOccupiedPosition&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -212,7 +219,7 @@
       <RunAsTest>true</RunAsTest>
       <method v="2" />
     </configuration>
-    <configuration name="RectangularMapTests" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
+    <configuration name="RectangularMapTests.testPlaceAnimalOutOfBounds" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
         <option name="executionName" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
@@ -225,7 +232,7 @@
           <list>
             <option value=":test" />
             <option value="--tests" />
-            <option value="&quot;agh.ics.oop.model.RectangularMapTests&quot;" />
+            <option value="&quot;agh.ics.oop.model.RectangularMapTests.testPlaceAnimalOutOfBounds&quot;" />
           </list>
         </option>
         <option name="vmOptions" />
@@ -262,18 +269,18 @@
     </configuration>
     <list>
       <item itemvalue="Application.World" />
-      <item itemvalue="Gradle.GrassFieldTest" />
-      <item itemvalue="Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass" />
       <item itemvalue="Gradle.RectangularMapTests" />
+      <item itemvalue="Gradle.RectangularMapTests.testCannotMoveToOccupiedPosition" />
+      <item itemvalue="Gradle.RectangularMapTests.testPlaceAnimalOutOfBounds" />
       <item itemvalue="Gradle.RectangularMapTests.testToString" />
     </list>
     <recent_temporary>
       <list>
-        <item itemvalue="Gradle.GrassFieldTest" />
+        <item itemvalue="Gradle.RectangularMapTests" />
         <item itemvalue="Application.World" />
         <item itemvalue="Gradle.RectangularMapTests.testToString" />
-        <item itemvalue="Gradle.RectangularMapTests" />
-        <item itemvalue="Gradle.GrassFieldTest.testCannotMoveToOccupiedPositionByGrass" />
+        <item itemvalue="Gradle.RectangularMapTests.testCannotMoveToOccupiedPosition" />
+        <item itemvalue="Gradle.RectangularMapTests.testPlaceAnimalOutOfBounds" />
       </list>
     </recent_temporary>
   </component>
@@ -312,9 +319,7 @@
       <workItem from="1731499861265" duration="10016000" />
       <workItem from="1731633463275" duration="3784000" />
       <workItem from="1731666558717" duration="2285000" />
-      <workItem from="1731715446408" duration="1873000" />
-      <workItem from="1732143122803" duration="15580000" />
-      <workItem from="1732270049779" duration="1839000" />
+      <workItem from="1733432400463" duration="7559000" />
     </task>
     <servers />
   </component>
Index: src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java b/src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java
new file mode 100644
--- /dev/null	(date 1733458095965)
+++ b/src/main/java/agh/ics/oop/model/ConsoleMapDisplay.java	(date 1733458095965)
@@ -0,0 +1,11 @@
+package agh.ics.oop.model;
+public class ConsoleMapDisplay implements MapChangeListener{
+    private int updateCount = 0;
+    @Override
+    public  void mapChanged(WorldMap worldMap, String message) {
+        synchronized(System.out) {
+            System.out.println("(Map " + worldMap.getId() + ") Update #" + (++updateCount) + ": " + message);
+            System.out.println(worldMap);
+        }
+    }
+}
\ No newline at end of file
Index: src/main/java/agh/ics/oop/model/SimulationEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/agh/ics/oop/model/SimulationEngine.java b/src/main/java/agh/ics/oop/model/SimulationEngine.java
new file mode 100644
--- /dev/null	(date 1733458096034)
+++ b/src/main/java/agh/ics/oop/model/SimulationEngine.java	(date 1733458096034)
@@ -0,0 +1,60 @@
+package agh.ics.oop.model;
+
+import agh.ics.oop.Simulation;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+
+public class SimulationEngine {
+
+    private List<Simulation> simulations;
+    private List<Thread> threads = new ArrayList<>();
+    private final ExecutorService threadPool = Executors.newFixedThreadPool(4);
+
+
+    public SimulationEngine(List<Simulation> simulations) {
+        this.simulations = simulations;
+    }
+
+    public void runSync() {
+        for (Simulation simulation : simulations) {
+            simulation.run();
+        }
+    }
+
+    public void runAsync() {
+
+        for (Simulation simulation : simulations) {
+            Thread thread = new Thread(simulation);
+            threads.add(thread);
+            thread.start();
+        }
+        awaitSimulationsEnd();
+    }
+
+    public void runAsyncInThreadPool() {
+        for (Simulation simulation : simulations) {
+            threadPool.submit(simulation);
+        }
+        awaitSimulationsEnd();
+    }
+
+    public void awaitSimulationsEnd() {
+        try {
+            for (Thread thread : threads) {
+                thread.join(); // Oczekiwanie na zakończenie wątku
+            }
+                 threadPool.shutdown();
+                if (!threadPool.awaitTermination(10, TimeUnit.SECONDS)) {
+                    threadPool.shutdownNow();
+                }
+            }
+            catch (InterruptedException e) {
+                    System.out.println(e.getMessage());
+                }
+
+        }
+}
\ No newline at end of file
